@font-face {
	font-family: "Josefin Sans";
	src: url("./../fonts/Josefin_Sans/JosefinSans-VariableFont_wght.ttf");
	font-display: swap;
}
:root {
	--app-width: 87%;

	--body-background: hsl(0, 0%, 98%);

	--forms-background: hsl(0, 0%, 98%);
	--forms-width: 70%;
	--forms-br: 5px;
	--form-inputs-padding: 0.8rem 1.1rem;
	--forms-margin-bottom: 1rem;
	--forms-font-size: 0.65rem;

	--checkboxes-width: 1rem;
	
	--primary-color: hsl(233, 11%, 84%);
	--secondary-color: hsl(240, 10%, 16%);
	--checkboxes-color: hsl(233, 11%, 84%);
	--labels-color: hsl(233, 14%, 35%);
	--checked-label-color: hsl(233, 11%, 84%);
	--new-task-color: hsl(237, 14%, 26%);
	--task-border-color: hsl(233, 11%, 84%);
	--active-clear-task-color: hsl(237, 14%, 26%);
	--active-new-task-color: hsl(237, 14%, 26%);
	--filter-buttons-base: hsl(234, 11%, 52%);
	--filter-buttons-active: hsl(237, 14%, 26%);
	--filter-buttons-selected: hsl(220, 98%, 61%);
	--selected-button: hsl(0, 100%, 67%);
	--tasks-info-color: hsl(234, 11%, 52%);

	--light-mobile-header-background: url("./../images/bg-mobile-light.jpg");
	--light-desktop-header-background: url("./../images/bg-desktop-lights.png");

	--toggle-theme-btn: url("./../images/icon-moon.svg");
}

body.dark {
	--forms-background: hsl(235, 24%, 19%);
	--body-background: hsl(235, 21%, 11%);
	--checkboxes-color: hsl(237, 14%, 26%);
	--checked-label-color: hsl(237, 14%, 26%);
	--labels-color: hsl(233, 11%, 84%);
	--new-task-color: hsl(233, 11%, 84%);
	--task-border-color: hsl(237, 14%, 26%);
	--active-new-task-color: hsl(237, 14%, 26%);
	--active-clear-task-color: hsl(233, 11%, 84%);
	--filter-buttons-base: hsl(234, 11%, 52%);
	--filter-buttons-active: hsl(233, 11%, 84%);
	--tasks-info-color: hsl(234, 11%, 52%);

	--dark-mobile-header-background: url("./../images/bg-mobile-dark.jpg");
	--dark-desktop-header-background: url("./../images/bg-desktop-darks.png");

	--toggle-theme-btn: url("./../images/icon-sun.svg");
}

/* 
RESETS 
*/

body {
	margin: 0;
}

/* Resetting buttons styles */

button {
	background: transparent;
	border: 0px solid transparent;
}
button:hover {
	border: 0px solid transparent;
}
button:active {
	outline: none;
	border: none;
}
button:focus {
	outline: 0;
}
.attribution {
	font-size: 11px;
	text-align: center;
	margin-top: 1rem;
}
.attribution a {
	color: hsl(0, 100%, 67%);
}

/* Resetting input checkboxes */

input[type="checkbox"] {
	appearance: none;
	-webkit-appearance: none;
	-moz-appearance: none;
	background-color: transparent;
}

/*
COLORS
*/

.new-task input {
	background-color: transparent;
}
.new-task,
.new-task input::placeholder,
.delete-checked-tasks-form,
.tasks-filter,
.tasks-info,
.single-task {
	background-color: var(--forms-background);
}

html {
	color: var(--secondary-color);
}

body {
	background-color: var(--body-background);
}

header {
	color: white;
}

.single-task label {
	color: var(--labels-color);
}

.task-checkbox:active {
	background-image: linear-gradient(
		to bottom right,
		hsl(0, 100%, 67%),
		hsl(0, 100%, 67%)
	);
	background-repeat: no-repeat;
	background-size: 100%;
}

.task-checkbox:active:after {
	content: "";
	background-color: var(--forms-background);
}

.task-checkbox:checked {
	background: linear-gradient(
		to right bottom,
		hsl(0, 100%, 67%),
		hsl(0, 100%, 67%)
	);
}

.tasks-count,
.clear-tasks,
.tasks-filter button {
	color: var(--filter-buttons-base);
}

.clear-tasks:active {
	color: var(--active-clear-task-color);
}

.tasks-filter button:active {
	color: var(--filter-buttons-active);
}
.new-task > input {
	color: var(--new-task-color);
}

.new-task > input:focus {
	outline: none;
}

button.filter-applied {
	color: var(--selected-button);
}

.instructions {
	color: var(--filter-buttons-base);
}

/* 
LAYOUT 
*/

*,
*::before,
*::after {
	box-sizing: border-box;
}

header {
	width: 100%;
	min-height: 60vh;
}

/* title and theme toggle button */
header > div {
	height: 100%;
	width: var(--app-width);
	margin: 0 auto;

	position: relative;
	top: 2.5rem;

	display: flex;
	justify-content: space-between;
	align-items: center;
}

header h1 {
	display: inline;
	margin: 0;
}

.toggle-dark-theme {
	height: 1.2rem;
	width: 1.2rem;
	padding: 0;
}

main {
	width: var(--app-width);
	margin: 0 auto;
	position: absolute;
	top: 6rem;
	bottom: 0;
	left: 0;
	right: 0;
}

.task-checkbox,
.checkbox {
	content: "";
	margin-right: 1.1rem;
	padding: 10px;
	border: 1px solid var(--checkboxes-color);
	width: var(--checkboxes-width);
	height: var(--checkboxes-width);
	border-radius: 100%;
}

/* tasks layout */

.new-task {
	display: flex;
	padding: var(--form-inputs-padding);
	border-radius: var(--forms-br);
}

.new-task {
	margin-bottom: var(--forms-margin-bottom);
}

.new-task > input {
	padding: 0;
	width: 100%;
	border: none;
}

.delete-checked-tasks-form {
	border-radius: var(--forms-br) var(--forms-br) 0 0;
	margin-bottom: 0;
}

.delete-checked-tasks-form,
.tasks-filter {
	box-shadow: 0px 40px 175px rgb(136 136 136 / 30%),
		-5px 0px 20px rgb(136 136 136 / 2%);
}

ul {
	padding: 0;
	margin: 0;
}

.single-task {
	padding: var(--form-inputs-padding);

	display: flex;
	justify-content: space-between;

	align-items: center;
	border-bottom: 1px solid var(--task-border-color);
}

.task-checkbox {
	width: var(--checkboxes-width);
	border-radius: 50%;
}

.task-checkbox:active {
	display: flex;
	justify-content: center;
	align-items: center;

	/* hiding the border */
	border: none;

	/* then increasing the size of the
	checkbox to avoid it looking smaller 
	than the others when the element is active */
	width: 22px;
	height: 22px;
}

/* displays a circle with the same 
background color as #delete-checked-tasks-form
 to make the active checkbox look transparent
*/
.task-checkbox:active:after {
	border-radius: 100%;
	/* gives this pseudo element a 
	height and width of 20px */
	padding: 10px;
}

.task-checkbox:checked {
	display: flex;
	justify-content: center;
	align-items: center;
}

.task-checkbox:checked:before {
	/* using padding to make the checkmark
	 in the background visible,
	 using the display:block, width, and height
	 properties didn't work */
	padding: 5px;
}

/* removes the check icon when unchecking 
a task, otherwise both the background circle
and the checkbox appear next to each other
because their parent is a flex element */
.task-checkbox:checked:active:before {
	display: none;
}

.single-task label {
	width: 100%;

	display: flex;
	align-content: center;
	align-items: center;
	margin-right: auto;
}

.single-task > div {
	display: flex;
}

.single-task button svg {
	transform: scale(80%);
}

.delete-task {
	height: 0.65rem;
	width: 0.65rem;
}

/* state layout */

.tasks-state {
	display: grid;
	grid-template-rows: 3rem 1.5rem 3rem;
	grid-template-columns: 1fr 2fr 1fr;
}

.tasks-info {
	border-radius: 0 0 var(--forms-br) var(--forms-br);
	grid-column-start: 1;
	grid-column-end: 4;
	width: 100%;

	display: flex;
	justify-content: space-between;
	align-items: center;
}

.tasks-count,
.clear-tasks {
	padding: 1rem;
	margin: 0;
}

.tasks-count {
	margin: 0;
}

.tasks-filter {
	border-radius: var(--forms-br);
	grid-row-start: 3;
	grid-column-start: 1;
	grid-column-end: 4;

	width: 100%;

	display: flex;
	justify-content: center;
}

.tasks-filter button {
	margin: 0 0.25rem;
	padding: 0.25rem;
}

.instructions {
	text-align: center;
	margin-top: 10rem;
}

/*
TYPOGRAPHY
*/

html {
	font-family: "Josefin Sans", sans-serif;
	font-size: 18px;
}

header h1 {
	text-transform: uppercase;
	font-size: 1.4rem;
	font-weight: 700;
	letter-spacing: 11px;
}

form {
	font-size: var(--forms-font-size);
}

.new-task::placeholder {
	font-size: 1rem;
}

.new-task > input {
	caret-color: hsl(220, 98%, 61%);
}

.task-checkbox:checked + label {
	text-decoration: line-through;
	color: var(--checked-label-color);
}

.single-task {
	font-size: var(--forms-font-size);
}

.new-task input,
button {
	font-family: "Josefin Sans";
}

.tasks-filter button {
	font-weight: 700;
}

.tasks-info {
	font-size: 0.7rem;
}

.task-checkbox:checked + label {
	text-decoration: line-through;
}

.list-instructions {
	color: var(--filter-buttons-base);
	font-size: 0.7rem;
	padding-block-end: 3rem;
	width: fit-content;
	margin: 2rem auto;
}

/*
ASSETS
*/

header {
	background-image: var(--light-mobile-header-background);
	background-repeat: no-repeat;
	background-position: top;
	background-size: 100%;
}

.toggle-dark-theme {
	background-size: contain;
	background-image: var(--toggle-theme-btn);
	background-repeat: no-repeat;
	background-position: center;
}

.task-checkbox:checked:before {
	content: "";
	background: url("./../images/icon-check.svg");
	background-position: center;
	background-repeat: no-repeat;
}

.delete-task {
	background-size: contain;
	background-repeat: no-repeat;
	background-image: url("./../images/icon-cross.svg");
	background-position: center;
}

/*
CURSORS
*/

.single-task-done label {
	cursor: default;
}

button:hover,
input[type="radio"],
.task-checkbox:hover,
.single-task label {
	cursor: pointer;
}

@media screen and (min-width: 1440px) {
	/*
		COLORS 
	*/

	.tasks-state {
		background-color: var(--forms-background);
	}

	.tasks-info {
		background-color: transparent;
	}

	.tasks-filter button:active {
		color: var(--primary-color);
	}

	.tasks-filter {
		box-shadow: none;
	}

	/* 
		LAYOUT
	*/

	header {
		background-size: 100%;
		min-height: 60vh;
		width: 100%;
		margin: 0 auto;
	}

	header > div {
		top: 4.2rem;
	}

	main,
	header > div {
		width: 37%;
	}

	main {
		position: absolute;
		top: 8.5rem;
		border-radius: var(--forms-br);
	}

	.new-task {
		margin-bottom: 1.5rem;
	}

	.single-task button {
		visibility: hidden;
	}

	.single-task:hover > button {
		visibility: visible;
	}

	.tasks-state {
		width: 100%;
		display: flex;
	}

	.tasks-state {
		padding: 0.5rem 0;
		margin-bottom: 0;
		border-radius: 0 0 var(--forms-br) var(--forms-br);

		display: grid;

		grid-template-columns: 1fr 2fr 1fr;
		grid-template-rows: 2rem;
	}

	.tasks-info {
		grid-row-start: 1;
	}

	.tasks-filter {
		grid-row-start: 1;
		grid-column-start: 2;
		grid-column-end: 3;
	}

	.tasks-filter label {
		margin-right: 1rem;
	}

	.instructions {
		margin-top: 20vh;
	}
	.attribution {
		margin-top: 1rem;
	}

	/* 
		TYPOGRAPHY
	*/

	header h1 {
		font-size: 2.3rem;
		letter-spacing: 14px;
	}

	form,
	li.single-task {
		font-size: 1rem;
	}

	.tasks-info {
		font-size: 0.8rem;
	}

	.tasks-filter button {
		font-size: 1rem;
	}

	/* 
		ASSETS
	*/

	.tasks-filter {
		background-color: transparent;
	}

	header {
		background-image: var(--light-desktop-header-background);
	}

	.list-instructions {
		font-size: 1rem;
		padding-block-end: 3rem;
		margin-block-start: 3rem;
	}
}

/*
	COLORS 
*/

.dark .delete-checked-tasks-form,
.dark .tasks-filter {
	box-shadow: 0px 10px 30px rgba(20, 10, 20, 0.9),
		-5px 0px 20px rgb(10 10 10 / 10%);
}

/*
ASSETS
*/

.dark header {
	background-image: var(--dark-mobile-header-background);
}

.dark .toggle-dark-theme {
	background-image: var(--toggle-theme-btn);
}

.attribution {
	font-size: 11px;
	text-align: center;
	order: 5;
	position: fixed;
	bottom: 1rem;
	left: 0;
	right: 0;
}
.attribution a {
	color: hsl(0, 100%, 67%);
}

@media screen and (min-width: 1440px) {
	/* 
		COLORS
	*/

	.dark .dark .tasks-state {
		background-color: var(--forms-background);
	}

	.dark .tasks-info,
	.dark .tasks-filter {
		background-color: transparent;
	}

	.dark .tasks-filter {
		box-shadow: none;
	}

	/*
		ASSETS
	*/

	.dark header {
		background-image: var(--dark-desktop-header-background);
	}

	.dark .toggle-dark-theme {
		background-image: var(--toggle-theme-btn);
	}
}
